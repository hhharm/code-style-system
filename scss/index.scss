//todo: split index.scss to 3 files, mb more
//structure: first modifications then elements
//Theme layer
.theme {
  //todo: write all of this
  &_color {
    &_project-default {
      //Значения фонов блоков:
      //      - дефолтный #FFFFFF;
      //- акцентный #ffcc00;
      //- бордерный #000000.
      //
      //Значения состояний текста:
      //- основной: #000000;
      //  - второстепенный: rgba(0, 0, 0, 0.6);
      //  - дополнительный: rgba(0, 0, 0, 0.3),
      //  - ссылочный: #0077ff.
    }

    &_project-brand {
      //Значения фонов блоков:
      //- дефолтный: #0077ff;
      //- акцентный: #FFFFFF;
      //- бордерный: #FFFFFF.
      //
      //Значения состояний текста:
      //- основной: #FFFFFF;
      //- второстепенный: rgba(255, 255, 255, 0.6);
      //- дополнительный: rgba(255, 255, 255, 0.3),
      //- ссылочный: #FFFFFF.
    }

    &_project-inverse {
      //Значения фонов блоков:
      //- дефолтный: #000000;
      //- акцентный: #FFFFFF;
      //- бордерный: #FFFFFF.
      //
      //Значения состояний текста:
      //- основной: #FFFFFF;
      //- второстепенный: rgba(255, 255, 255, 0.6);
      //- дополнительный: rgba(255, 255, 255, 0.3),
      //- ссылочный: #0077ff.
    }

    &_project-warning {
      //Значения фонов блоков:
      //- дефолтный: #ff3333;
      //- акцентный: #FFFFFF;
      //- бордерный: #ff3333.
      //
      //Значения состояний текста:
      //- основной: #FFFFFF;
      //- второстепенный: rgba(255, 255, 255, 0.6);
      //- дополнительный: rgba(255, 255, 255, 0.3),
      //- ссылочный: #FFF.
    }
  }

  &_space {
    &_default {
      //Значения размеров высоты текста (так как в задании текст в виде линий):
      //- s: 8px;
      //- m: 10px;
      //- l: 11px;
      //- xl: 13px;
      //- xxl: 16px.
      //
      //Значения межстрочных интервалов:
      //- s: 21px;
      //- m: 25px;
      //- l: 28px;
      //- xl: 34px;
      //- xxl: 38px.
    }
  }

  &_size {
    &_default {
      //Пример размеров текста:
      //- xxxs: 3px;
      //- xxs: 6px;
      //- xs: 9px;
      //- s: 15px;
      //- m: 18px;
      //- l: 24px;
      //- xl: 27px;
      //- xxl: 36px;
      //- xxxl: 45px;
      //- xxxxl: 51px;
      //- xxxxxl: 72px.
    }
  }

  &_gap_small {
    //--gap:
    //.theme_gap_small — модификатор на отступ между колонками и отступами в сетке.
    // В стилях содержит переменную gap, которая на десктопе имеет значение, соответствующее
    // xl-отступу, а в мобильном представлении s. Для получения половинного значения переменная gap
    // делится на два.
  }

  //this means add variable for breakpoint, right?
  //  todo: На экране с размером меньше 1024px все блоки должны перестроиться один под другим.
}

//frame layer
.layout {
  &__container {
    &_align {
      &_center {
        //  Выравнивание контейнера по горизонтали
      }

      &_size {
        //Максимальная ширина контейнера
        //  Для s модификатора нужно указать ширину 920px, для m — 1280px.
        &_s {
        }

        &_m {
        }
      }

      &_space-v {
        &_xxxxl {
          //Внутренние отступы по вертикали
        }

        &_xxxxxl {
          //  Внутренние отступы по вертикали
        }
      }

      &_indent-b {
        &_xxl {
          //Внешний отступ снизу
        }

        &_xxxxl {
          // Внешний отступ снизу

        }
      }
    }
  }
}

.grid {
  //Ширина экрана screen-m совпадает с шириной брейкпойнта и равна 1024px.
  &_m-columns {
    //Количество возможных колонок при ширине экрана screen-m
    &_12 {

    }

    &_10 {

    }

  }

  &_col-gap {
    //  Отступ между колонками
    &_two-thirds {

    }

    &_full {
    }

    &_half {
    }

  }

  &_row-gap {
    //Отступ между строками
    &_full {
    }

    &_half {
    }

  }

  &__fraction {
    //  Колоночный элемент c шириной в несколько колонок
    &_m-col {
      &_2 {
      }

      &_3 {
      }

      &_4 {
      }

      &_5 {
      }

      &_8 {
      }
    }
  }
}

//patterns layer
.card {
  //  todo: write
  //  Блок card — карточка для представления информации в компактном формате.
}

.form {
  //  todo: write
  //  Блок form — это визуальное представление веб-формы, которая принимает и отправляет данные пользователя.

}

.informer {
  //  todo: write
  //Информационный блок, имеющий статус. Нужное оформление достигается путём миксования к нему блока
  // темы со статусным значением цветового модификатора (например, theme_color_project-warning).
}

.list {
  //  todo: write
  //  list используется для вертикального представления повторяющихся сущностей.
  //  Отлично подходит для отображения истории, контактов, вертикальных меню.
}

.icon-plus {
  //  todo: write
  //Самый маленький и самый популярный блок pt-icon-plus выравнивает любой графический элемент
  // рядом с контентом.
}

.section {
  //  todo: write
  //Контейнер для отделения группы блоков.
}

//Content layer
.text {}
.avatar {}
.brand-logo {}
.placeholder {}
.button {}
.input {}
.image {}
.accordion {
//  css implementation was in 2019 shri
}